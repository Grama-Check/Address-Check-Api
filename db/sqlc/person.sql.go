// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: person.sql

package db

import (
	"context"
)

const createPerson = `-- name: CreatePerson :one
INSERT INTO persons (
    nic,
    address,
    name
) VALUES (
    $1,
    $2,
    $3)
RETURNING nic, address, name
`

type CreatePersonParams struct {
	Nic     string `json:"nic"`
	Address string `json:"address"`
	Name    string `json:"name"`
}

func (q *Queries) CreatePerson(ctx context.Context, arg CreatePersonParams) (Person, error) {
	row := q.queryRow(ctx, q.createPersonStmt, createPerson, arg.Nic, arg.Address, arg.Name)
	var i Person
	err := row.Scan(&i.Nic, &i.Address, &i.Name)
	return i, err
}

const getPerson = `-- name: GetPerson :one
SELECT nic, address, name FROM persons
WHERE nic = $1
LIMIT 1
`

func (q *Queries) GetPerson(ctx context.Context, nic string) (Person, error) {
	row := q.queryRow(ctx, q.getPersonStmt, getPerson, nic)
	var i Person
	err := row.Scan(&i.Nic, &i.Address, &i.Name)
	return i, err
}
